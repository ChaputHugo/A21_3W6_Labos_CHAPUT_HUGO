// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZombieParty.Models.Data;

namespace ZombieParty.Migrations
{
    [DbContext(typeof(ZombiePartyDbContext))]
    [Migration("20220608195930_chance")]
    partial class chance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZombieParty.Models.HuntingLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HuntingLog");
                });

            modelBuilder.Entity("ZombieParty.Models.Zombie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Force")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZombieTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZombieTypeId");

                    b.ToTable("Zombie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Force = 8,
                            Name = "LeChuck",
                            Point = 5,
                            ShortDesc = "Pirate des Caraibes",
                            ZombieTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Force = 6,
                            Name = "Lenore",
                            Point = 4,
                            ShortDesc = "Cute Little Dead Girl",
                            ZombieTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Force = 4,
                            Name = "Baron Samedi",
                            Point = 8,
                            ShortDesc = "En costume de soirée, avec un chapeau haut de forme blanc et des lunettes soleil",
                            ZombieTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Force = 9,
                            Name = "Draugr",
                            Point = 2,
                            ShortDesc = "Vivant dans sa tombe grandant son trésor",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            Force = 4,
                            Name = "Ragamuffin ",
                            Point = 5,
                            ShortDesc = "Ancien vampire transformé en poupée de chiffon, ami de Lenore",
                            ZombieTypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Force = 3,
                            Name = "Mr Gosh",
                            Point = 6,
                            ShortDesc = "Tête de sac avec yeux en boutons, amoureux de Lenore",
                            ZombieTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            Force = 1,
                            Name = "Taxidermy ",
                            Point = 1,
                            ShortDesc = "Tête de cerf empaillé, voisin de Lenore",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Force = 9,
                            Name = "Kitty",
                            Point = 3,
                            ShortDesc = "Chat mort de Lenore",
                            ZombieTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            Force = 3,
                            Name = "Singe zombie",
                            Point = 2,
                            ShortDesc = "Voleur très rapide",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Force = 5,
                            Name = "chien de l'enfer",
                            Point = 7,
                            ShortDesc = "chien très rapide, pouvant être enflammé",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            Force = 9,
                            Name = "Avogadro",
                            Point = 9,
                            ShortDesc = "Attaque avec des éclairs suite à un orage",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            Force = 9,
                            Name = "Lady Rose",
                            Point = 6,
                            ShortDesc = "",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            Force = 10,
                            Name = "Matbeth",
                            Point = 2,
                            ShortDesc = "Jeune étudiante qui cherche son professeur pour se venger",
                            ZombieTypeId = 2
                        },
                        new
                        {
                            Id = 14,
                            Force = 2,
                            Name = "The Clown",
                            Point = 5,
                            ShortDesc = "Le clown malheureux qui court après les enfants",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 15,
                            Force = 5,
                            Name = "Clicker",
                            Point = 4,
                            ShortDesc = "Le comptable mécontent qui cherche les failles",
                            ZombieTypeId = 2
                        },
                        new
                        {
                            Id = 16,
                            Force = 9,
                            Name = "TeamsZombie",
                            Point = 10,
                            ShortDesc = "L'étudiant happé par Teams. Trop d'heures de vidéos ont transformé cet étudiant en zombie",
                            ZombieTypeId = 3
                        },
                        new
                        {
                            Id = 17,
                            Force = 7,
                            Name = "Mathilde",
                            Point = 4,
                            ShortDesc = "La fêtarde du samedi soir qui cherche les fêtes et les bars en vogue",
                            ZombieTypeId = 3
                        });
                });

            modelBuilder.Entity("ZombieParty.Models.ZombieType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZombieType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Contact"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Virus"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Chimique"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Morsure"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "vampzombie"
                        });
                });

            modelBuilder.Entity("ZombieParty.Models.Zombie", b =>
                {
                    b.HasOne("ZombieParty.Models.ZombieType", "ZombieType")
                        .WithMany()
                        .HasForeignKey("ZombieTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZombieType");
                });
#pragma warning restore 612, 618
        }
    }
}
